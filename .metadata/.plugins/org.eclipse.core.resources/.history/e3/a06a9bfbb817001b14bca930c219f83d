package br.ufg.inf.spring.ctrl.negocio;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.ufg.inf.spring.ctrl.excecao.NotFoundException;
import br.ufg.inf.spring.model.entidades.Biblioteca;
import br.ufg.inf.spring.model.repositorio.BibliotecaRepositorio;


@Service
public class BibliotecaNegocio {
	
	@Autowired
	private BibliotecaRepositorio repositorio;
	
	public List<Biblioteca> findAll(){
		return repositorio.findAll();
	}
	
	public Biblioteca findById(Integer Id) throws NotFoundException {
		Optional<Biblioteca> retorno = repositorio.findById(Id);
		if(!retorno.isPresent()) {
			throw new NotFoundException("Biblioteca com id "+Id+" não encontrada");
		}
		return retorno.get();
	}
	
	public Biblioteca insert(Biblioteca biblioteca) {
		return repositorio.save(biblioteca);
	}
	
	public void delete(Integer id) {
		repositorio.deleteById(id);
	}
	
	
	public Biblioteca update(Biblioteca biblioteca) throws NotFoundException{
		Optional<Biblioteca> bUpd = repositorio.findById(biblioteca.getIdBiblioteca());
		//Atualizar os daddos no objeto
		
		if(!bUpd.isPresent()) {
			throw new NotFoundException("Biblioteca com id "+biblioteca.getIdBiblioteca()+" não encontrada");
		}
		else {
			Biblioteca bibliotecaUpdate = bUpd.get();
			bibliotecaUpdate.setNomeBiblioteca(biblioteca.getNomeBiblioteca());
			bibliotecaUpdate.setEndereco(biblioteca.getEndereco());
			bibliotecaUpdate.setCidade(bibliotecaUpdate.getCidade());
			
			return repositorio.save(bibliotecaUpdate);
		}
		
		
	}
}
